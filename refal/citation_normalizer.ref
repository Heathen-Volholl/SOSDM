// ==============================
// REFAL-5Î» Text Processing Rules
// File: refal/citation_normalizer.ref
// ==============================

$ENTRY NormalizeCitation {
  (e.Citation) = <ProcessCitation <Trim e.Citation>>;
}

ProcessCitation {
  // APA Format: Author, A. A. (Year). Title. Journal, Volume(Issue), pages.
  e.Author ', ' e.Year '. ' e.Title '. ' e.Journal ', ' e.Volume '(' e.Issue '), ' e.Pages '.' =
    'APA{' 
      'author:' e.Author ';'
      'year:' e.Year ';'
      'title:' e.Title ';'
      'journal:' e.Journal ';'
      'volume:' e.Volume ';'
      'issue:' e.Issue ';'
      'pages:' e.Pages
    '}';
  
  // IEEE Format: [1] A. Author, "Title," Journal, vol. X, no. Y, pp. Z-Z, Year.
  '[' e.Num '] ' e.Author ', "' e.Title '," ' e.Journal ', vol. ' e.Vol ', no. ' e.Num2 ', pp. ' e.Pages ', ' e.Year '.' =
    'IEEE{' 
      'number:' e.Num ';'
      'author:' e.Author ';'
      'title:' e.Title ';'
      'journal:' e.Journal ';'
      'volume:' e.Vol ';'
      'number:' e.Num2 ';'
      'pages:' e.Pages ';'
      'year:' e.Year
    '}';
  
  // Fallback - return as-is with unknown format marker
  e.Other = 'UNKNOWN{' e.Other '}';
}

$ENTRY ExtractAbstract {
  (e.Text) = <FindAbstract <SplitSentences e.Text>>;
}

FindAbstract {
  e.Start 'Abstract' s.Delim e.Abstract 'Introduction' e.Rest = 
    <CleanAbstract e.Abstract>;
  e.Start 'ABSTRACT' s.Delim e.Abstract 'INTRODUCTION' e.Rest = 
    <CleanAbstract e.Abstract>;
  e.Start 'Abstract:' e.Abstract 'Keywords:' e.Rest = 
    <CleanAbstract e.Abstract>;
  e.Other = 'NO_ABSTRACT_FOUND';
}

CleanAbstract {
  = '';
  ' ' e.Rest = <CleanAbstract e.Rest>;
  '\n' e.Rest = ' ' <CleanAbstract e.Rest>;
  '\t' e.Rest = ' ' <CleanAbstract e.Rest>;
  s.Char e.Rest = s.Char <CleanAbstract e.Rest>;
}

SplitSentences {
  = ;
  e.Text '.' ' ' e.Rest = e.Text '.|' <SplitSentences e.Rest>;
  e.Text '!' ' ' e.Rest = e.Text '!|' <SplitSentences e.Rest>;
  e.Text '?' ' ' e.Rest = e.Text '?|' <SplitSentences e.Rest>;
  e.Text = e.Text;
}

$ENTRY NormalizeKeywords {
  (e.Keywords) = <ProcessKeywords <SplitKeywords e.Keywords>>;
}

SplitKeywords {
  = ;
  e.Start ',' e.Rest = <Trim e.Start> '|' <SplitKeywords e.Rest>;
  e.Start ';' e.Rest = <Trim e.Start> '|' <SplitKeywords e.Rest>;
  e.Keywords = <Trim e.Keywords>;
}

ProcessKeywords {
  = ;
  e.Keyword '|' e.Rest = <StandardizeKeyword e.Keyword> ',' <ProcessKeywords e.Rest>;
  e.Keyword = <StandardizeKeyword e.Keyword>;
}

StandardizeKeyword {
  e.Keyword = <Lower <Trim e.Keyword>>;
}

Trim {
  = ;
  ' ' e.Rest = <Trim e.Rest>;
  e.Start ' ' = <TrimEnd e.Start>;
  e.Text = e.Text;
}

TrimEnd {
  = ;
  e.Start ' ' = <TrimEnd e.Start>;
  e.Text = e.Text;
}

Lower {
  = ;
  'A' e.Rest = 'a' <Lower e.Rest>;
  'B' e.Rest = 'b' <Lower e.Rest>;
  'C' e.Rest = 'c' <Lower e.Rest>;
  'D' e.Rest = 'd' <Lower e.Rest>;
  'E' e.Rest = 'e' <Lower e.Rest>;
  'F' e.Rest = 'f' <Lower e.Rest>;
  'G' e.Rest = 'g' <Lower e.Rest>;
  'H' e.Rest = 'h' <Lower e.Rest>;
  'I' e.Rest = 'i' <Lower e.Rest>;
  'J' e.Rest = 'j' <Lower e.Rest>;
  'K' e.Rest = 'k' <Lower e.Rest>;
  'L' e.Rest = 'l' <Lower e.Rest>;
  'M' e.Rest = 'm' <Lower e.Rest>;
  'N' e.Rest = 'n' <Lower e.Rest>;
  'O' e.Rest = 'o' <Lower e.Rest>;
  'P' e.Rest = 'p' <Lower e.Rest>;
  'Q' e.Rest = 'q' <Lower e.Rest>;
  'R' e.Rest = 'r' <Lower e.Rest>;
  'S' e.Rest = 's' <Lower e.Rest>;
  'T' e.Rest = 't' <Lower e.Rest>;
  'U' e.Rest = 'u' <Lower e.Rest>;
  'V' e.Rest = 'v' <Lower e.Rest>;
  'W' e.Rest = 'w' <Lower e.Rest>;
  'X' e.Rest = 'x' <Lower e.Rest>;
  'Y' e.Rest = 'y' <Lower e.Rest>;
  'Z' e.Rest = 'z' <Lower e.Rest>;
  s.Char e.Rest = s.Char <Lower e.Rest>;
}
